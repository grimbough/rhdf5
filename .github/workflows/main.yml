on:
  push:
    branches:
      - master
      - workflow-testing
  pull_request:
    branches:
      - master

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
        - { os: windows-latest, r: 'prerelease'}
        - { os: macOS-latest, r: 'prerelease'}
        - { os: ubuntu-18.04, r: 'devel', rspm: "https://packagemanager.rstudio.com/all/__linux__/bionic/latest"}
        - { os: ubuntu-20.04, r: 'devel', rspm: "https://packagemanager.rstudio.com/all/__linux__/focal/latest"}

    env:
      CRAN: ${{ matrix.config.rspm }}
        
    steps:
    
      - name: Set environment variables
        run: |
          echo "R_REMOTES_NO_ERRORS_FROM_WARNINGS=true" >> $GITHUB_ENV
    
      - name: Configure git
        run: |
          git config --global core.autocrlf false
          git config --global user.email "ghau@example.com"
          git config --global user.name "GitHub Actions User"
          
      - name: Install system libraries
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo apt-get install libcurl4-openssl-dev
          
      - uses: actions/checkout@v1
          
      - name: Setup R
        uses: grimbough/actions-1/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master
      
      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-1-

      - name: Install dependencies
        run: |
          install.packages(c('rcmdcheck', 'devtools'))
          remotes::install_github(repo = 'Bioconductor/BiocManager')
          BiocManager::install(version = '3.13', ask = FALSE, update = TRUE)
          toInstall <- remotes::dev_package_deps(dependencies = TRUE)[,'package']
          BiocManager::install(toInstall, ask = FALSE, update = TRUE, INSTALL_opts = '--force-biarch')
        shell: Rscript {0}
        
      - name: Non-windows check
        if: ${{ matrix.config.os != 'windows-latest' }}
        run: |
          Rscript -e "rcmdcheck::rcmdcheck(args = c('--no-manual'), error_on = 'warning', check_dir = 'check')"

      - name: Windows check
        if: ${{ matrix.config.os == 'windows-latest' }}
        run: |
          Rscript -e "rcmdcheck::rcmdcheck(args = c('--no-manual', '--force-multiarch', '--install-args=`"--force-biarch`"'), error_on = 'warning', check_dir = 'check')"
          
      - name: Test coverage
        if: ${{ matrix.config.os == 'macOS-latest' }}
        run: |
          BiocManager::install('covr', update = FALSE, ask = FALSE)
          covr::codecov()
        shell: Rscript {0}
